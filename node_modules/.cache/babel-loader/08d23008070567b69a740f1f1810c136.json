{"ast":null,"code":"var _jsxFileName = \"/Users/stevo/Desktop/UCLA-HomeWork/React Porfolio/React-Portfolio/src/components/pages/Contact/Index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport \"./Contact.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  // Here we set two state variables for firstName and lastName using `useState`\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n}\n_s(Form, \"nKDhQq9MYs1tO8AVH68rBUfX7/U=\");\n_c = Form;\nconst handleInputChange = e => {\n  // Getting the value and name of the input which triggered the change\n  const {\n    name,\n    value\n  } = e.target;\n\n  // Ternary statement that will call either setFirstName or setLastName based on what field the user is typing in\n  return name === 'firstName' ? setFirstName(value) : setLastName(value);\n};\nconst handleFormSubmit = e => {\n  // Preventing the default behavior of the form submit (which is to refresh the page)\n  e.preventDefault();\n\n  // Alert the user their first and last name, clear the inputs\n  alert(`Hello ${firstName} ${lastName}`);\n  setFirstName('');\n  setLastName('');\n};\nexport default function Contact() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Please Contact Me Here! \", firstName, \" \", lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: firstName,\n        name: \"firstName\",\n        onChange: handleInputChange,\n        type: \"text\",\n        placeholder: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: lastName,\n        name: \"lastName\",\n        onChange: handleInputChange,\n        type: \"text\",\n        placeholder: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleFormSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Contact;\nvar _c, _c2;\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Contact\");","map":{"version":3,"names":["React","Form","firstName","setFirstName","useState","lastName","setLastName","handleInputChange","e","name","value","target","handleFormSubmit","preventDefault","alert","Contact"],"sources":["/Users/stevo/Desktop/UCLA-HomeWork/React Porfolio/React-Portfolio/src/components/pages/Contact/Index.js"],"sourcesContent":["import React from 'react';\nimport \"./Contact.css\";\n\nfunction Form() {\n  // Here we set two state variables for firstName and lastName using `useState`\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n}\n\nconst handleInputChange = (e) => {\n  // Getting the value and name of the input which triggered the change\n  const { name, value } = e.target;\n\n  // Ternary statement that will call either setFirstName or setLastName based on what field the user is typing in\n  return name === 'firstName' ? setFirstName(value) : setLastName(value);\n};\n\nconst handleFormSubmit = (e) => {\n  // Preventing the default behavior of the form submit (which is to refresh the page)\n  e.preventDefault();\n\n  // Alert the user their first and last name, clear the inputs\n  alert(`Hello ${firstName} ${lastName}`);\n  setFirstName('');\n  setLastName('');\n};\n\nexport default function Contact() {\n  \n  return (\n    <div>\n      <p>\n        Please Contact Me Here! {firstName} {lastName}\n      </p>\n      <form className=\"form\">\n        <input\n          value={firstName}\n          name=\"firstName\"\n          onChange={handleInputChange}\n          type=\"text\"\n          placeholder=\"First Name\"\n        />\n        <input\n          value={lastName}\n          name=\"lastName\"\n          onChange={handleInputChange}\n          type=\"text\"\n          placeholder=\"Last Name\"\n        />\n        <button type=\"button\" onClick={handleFormSubmit}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAAC;AAEvB,SAASC,IAAI,GAAG;EAAA;EACd;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;AAC9C;AAAC,GAJQH,IAAI;AAAA,KAAJA,IAAI;AAMb,MAAMM,iBAAiB,GAAIC,CAAC,IAAK;EAC/B;EACA,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;;EAEhC;EACA,OAAOF,IAAI,KAAK,WAAW,GAAGN,YAAY,CAACO,KAAK,CAAC,GAAGJ,WAAW,CAACI,KAAK,CAAC;AACxE,CAAC;AAED,MAAME,gBAAgB,GAAIJ,CAAC,IAAK;EAC9B;EACAA,CAAC,CAACK,cAAc,EAAE;;EAElB;EACAC,KAAK,CAAE,SAAQZ,SAAU,IAAGG,QAAS,EAAC,CAAC;EACvCF,YAAY,CAAC,EAAE,CAAC;EAChBG,WAAW,CAAC,EAAE,CAAC;AACjB,CAAC;AAED,eAAe,SAASS,OAAO,GAAG;EAEhC,oBACE;IAAA,wBACE;MAAA,uCAC2Bb,SAAS,OAAGG,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3C,eACJ;MAAM,SAAS,EAAC,MAAM;MAAA,wBACpB;QACE,KAAK,EAAEH,SAAU;QACjB,IAAI,EAAC,WAAW;QAChB,QAAQ,EAAEK,iBAAkB;QAC5B,IAAI,EAAC,MAAM;QACX,WAAW,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QACxB,eACF;QACE,KAAK,EAAEF,QAAS;QAChB,IAAI,EAAC,UAAU;QACf,QAAQ,EAAEE,iBAAkB;QAC5B,IAAI,EAAC,MAAM;QACX,WAAW,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QACvB,eACF;QAAQ,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEK,gBAAiB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEvC;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,MA5BuBG,OAAO;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}